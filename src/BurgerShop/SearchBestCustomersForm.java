package BurgerShop;

import java.awt.Font;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

public class SearchBestCustomersForm extends javax.swing.JFrame {

    /**
     * Creates new form ViewCustomerForm
     *
     * @param ar
     * @param key
     * @return
     */
    public static boolean searching(String ar[], String key) {
        for (int i = 0; i < ar.length; i++) {
            if (key.equals(ar[i])) {
                return true;
            }
        }
        return false;
    }

    public SearchBestCustomersForm() {
        initComponents();
        getContentPane().setBackground(new java.awt.Color(255, 255, 255, 255));
        try {
            List customerList = CustomerController.getAllCustomers();
            DefaultTableModel dtm = (DefaultTableModel) tblCustomer.getModel();
            dtm.setRowCount(0);

            Burger[] customer = customerList.toArray();
            String CustomerId[] = new String[0];
            String Names[] = new String[0];
            for (int i = 0; i < customer.length; i++) {
                if (!searching(CustomerId, customer[i].getCustomerId())) {
                    String tempCustomerId[] = new String[CustomerId.length + 1];
                    String tempNames[] = new String[CustomerId.length + 1];
                    for (int j = 0; j < CustomerId.length; j++) {
                        tempCustomerId[j] = CustomerId[j];
                        tempNames[j] = Names[j];
                    }
                    CustomerId = tempCustomerId;
                    Names = tempNames;
                    CustomerId[CustomerId.length - 1] = customer[i].getCustomerId();
                    Names[Names.length - 1] = customer[i].getCustomerName();
                }
            }

            int totalAmount[] = new int[CustomerId.length];
            for (int i = 0; i < CustomerId.length; i++) {
                int total = 0;
                for (int j = 0; j < customer.length; j++) {
                    if (CustomerId[i].equals(customer[j].getCustomerId()) & customer[j].getStatus().equals("DELIVERED")) {
                        total += customer[j].getBurgerQty();
                    }
                }
                totalAmount[i] = total;
            }

            for (int i = totalAmount.length - 1; i >= 0; i--) {
                for (int j = 0; j < i; j++) {
                    if (totalAmount[j + 1] < totalAmount[j]) {
                        int temp = totalAmount[j];
                        totalAmount[j] = totalAmount[j + 1];
                        totalAmount[j + 1] = temp;
                        String tempCustomerId = CustomerId[j];
                        CustomerId[j] = CustomerId[j + 1];
                        CustomerId[j + 1] = tempCustomerId;
                        String tempName = Names[j];
                        Names[j] = Names[j + 1];
                        Names[j + 1] = tempName;
                    }
                }
                Object[] rowData = {CustomerId[i], Names[i], totalAmount[i] * 500.00};
                dtm.addRow(rowData);
            }
        } catch (IOException ex) {
            Logger.getLogger(SearchCustomerForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
        for (int i = 0; i < tblCustomer.getColumnCount(); i++) {
            tblCustomer.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
        }
        tblCustomer.getColumnModel().getColumn(1).setPreferredWidth(120);

        DefaultTableCellRenderer renderer = (DefaultTableCellRenderer) tblCustomer.getTableHeader().getDefaultRenderer();
        renderer.setHorizontalAlignment(0);

        JTableHeader header = tblCustomer.getTableHeader();
        header.setFont(new Font("Rockwell", Font.BOLD, 18));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblCustomer = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblCustomer.setFont(new java.awt.Font("Segoe UI Semibold", 0, 17)); // NOI18N
        tblCustomer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer ID", "Name", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblCustomer.setRowHeight(35);
        tblCustomer.setShowHorizontalLines(true);
        tblCustomer.setShowVerticalLines(true);
        jScrollPane1.setViewportView(tblCustomer);

        jLabel2.setBackground(new java.awt.Color(209, 72, 72));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Search Best Customers");
        jLabel2.setOpaque(true);

        btnBack.setBackground(new java.awt.Color(209, 72, 72));
        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(86, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(39, 39, 39))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(btnBack)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchBestCustomersForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchBestCustomersForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchBestCustomersForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchBestCustomersForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchBestCustomersForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCustomer;
    // End of variables declaration//GEN-END:variables
}
